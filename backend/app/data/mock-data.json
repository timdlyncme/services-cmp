{
  "templates": [
    {
      "id": "template-1",
      "name": "Basic Web Application",
      "description": "Deploys a simple web application with supporting infrastructure",
      "type": "terraform",
      "provider": "azure",
      "code": "provider \"azurerm\" {\n  features {}\n}\n\nresource \"azurerm_resource_group\" \"main\" {\n  name     = \"web-app-resources\"\n  location = \"East US\"\n}\n\nresource \"azurerm_app_service_plan\" \"main\" {\n  name                = \"webapp-asp\"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  kind                = \"Linux\"\n  reserved            = true\n\n  sku {\n    tier = \"Basic\"\n    size = \"B1\"\n  }\n}\n\nresource \"azurerm_app_service\" \"main\" {\n  name                = \"webapp-basic-service\"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  app_service_plan_id = azurerm_app_service_plan.main.id\n\n  site_config {\n    linux_fx_version = \"DOCKER|nginx:latest\"\n  }\n}",
      "deploymentCount": 5,
      "uploadedAt": "2023-03-15T09:12:00Z",
      "updatedAt": "2023-05-22T13:45:00Z",
      "categories": ["web", "basic"],
      "tenantId": "tenant-1"
    },
    {
      "id": "template-2",
      "name": "Containerized Microservices",
      "description": "Kubernetes cluster for microservices deployment",
      "type": "terraform",
      "provider": "aws",
      "code": "provider \"aws\" {\n  region = \"us-west-2\"\n}\n\nresource \"aws_eks_cluster\" \"main\" {\n  name     = \"microservices-cluster\"\n  role_arn = aws_iam_role.eks_cluster.arn\n\n  vpc_config {\n    subnet_ids = [\"subnet-12345\", \"subnet-67890\"]\n  }\n}\n\nresource \"aws_iam_role\" \"eks_cluster\" {\n  name = \"eks-cluster-role\"\n\n  assume_role_policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = \"sts:AssumeRole\"\n        Effect = \"Allow\"\n        Principal = {\n          Service = \"eks.amazonaws.com\"\n        }\n      },\n    ]\n  })\n}\n\nresource \"aws_iam_role_policy_attachment\" \"eks_cluster_policy\" {\n  policy_arn = \"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"\n  role       = aws_iam_role.eks_cluster.name\n}",
      "deploymentCount": 3,
      "uploadedAt": "2023-04-02T11:30:00Z",
      "updatedAt": "2023-06-10T09:15:00Z",
      "categories": ["kubernetes", "microservices", "containers"],
      "tenantId": "tenant-1"
    },
    {
      "id": "template-3",
      "name": "Google Cloud Storage with CDN",
      "description": "Static website hosting with CDN",
      "type": "terraform",
      "provider": "gcp",
      "code": "provider \"google\" {\n  project = \"my-project-id\"\n  region  = \"us-central1\"\n}\n\nresource \"google_storage_bucket\" \"static_site\" {\n  name          = \"static-website-bucket\"\n  location      = \"US\"\n  storage_class = \"STANDARD\"\n\n  website {\n    main_page_suffix = \"index.html\"\n    not_found_page   = \"404.html\"\n  }\n}\n\nresource \"google_storage_bucket_iam_member\" \"public_read\" {\n  bucket = google_storage_bucket.static_site.name\n  role   = \"roles/storage.objectViewer\"\n  member = \"allUsers\"\n}\n\nresource \"google_compute_backend_bucket\" \"cdn_backend\" {\n  name        = \"cdn-backend-bucket\"\n  description = \"Backend bucket for CDN\"\n  bucket_name = google_storage_bucket.static_site.name\n  enable_cdn  = true\n}",
      "deploymentCount": 2,
      "uploadedAt": "2023-05-05T14:20:00Z",
      "updatedAt": "2023-06-18T16:40:00Z",
      "categories": ["storage", "cdn", "static-site"],
      "tenantId": "tenant-1"
    },
    {
      "id": "template-4",
      "name": "Virtual Machine Scale Set",
      "description": "Autoscaling VMs for high availability",
      "type": "arm",
      "provider": "azure",
      "code": "{\n  \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\",\n  \"contentVersion\": \"1.0.0.0\",\n  \"parameters\": {\n    \"vmSku\": {\n      \"type\": \"string\",\n      \"defaultValue\": \"Standard_DS2_v2\",\n      \"metadata\": {\n        \"description\": \"Size of VMs in the VM Scale Set.\"\n      }\n    },\n    \"vmssName\": {\n      \"type\": \"string\",\n      \"metadata\": {\n        \"description\": \"Name of the VM Scale Set.\"\n      }\n    }\n  },\n  \"resources\": [\n    {\n      \"type\": \"Microsoft.Compute/virtualMachineScaleSets\",\n      \"name\": \"[parameters('vmssName')]\",\n      \"location\": \"[resourceGroup().location]\",\n      \"apiVersion\": \"2021-03-01\",\n      \"sku\": {\n        \"name\": \"[parameters('vmSku')]\",\n        \"tier\": \"Standard\",\n        \"capacity\": 2\n      },\n      \"properties\": {\n        \"overprovision\": true,\n        \"upgradePolicy\": {\n          \"mode\": \"Automatic\"\n        },\n        \"virtualMachineProfile\": {\n          \"storageProfile\": {\n            \"osDisk\": {\n              \"createOption\": \"FromImage\",\n              \"caching\": \"ReadWrite\"\n            },\n            \"imageReference\": {\n              \"publisher\": \"Canonical\",\n              \"offer\": \"UbuntuServer\",\n              \"sku\": \"18.04-LTS\",\n              \"version\": \"latest\"\n            }\n          },\n          \"osProfile\": {\n            \"computerNamePrefix\": \"vmss\",\n            \"adminUsername\": \"azureuser\",\n            \"adminPassword\": \"P@ssword1234!\"\n          }\n        }\n      }\n    }\n  ]\n}",
      "deploymentCount": 1,
      "uploadedAt": "2023-02-20T10:05:00Z",
      "updatedAt": "2023-05-30T11:22:00Z",
      "categories": ["virtual-machines", "autoscaling", "high-availability"],
      "tenantId": "tenant-1"
    },
    {
      "id": "template-5",
      "name": "S3 Static Website",
      "description": "Simple S3 bucket configured for website hosting",
      "type": "cloudformation",
      "provider": "aws",
      "code": "{\n  \"AWSTemplateFormatVersion\": \"2010-09-09\",\n  \"Description\": \"CloudFormation template for S3 static website\",\n  \"Resources\": {\n    \"S3Bucket\": {\n      \"Type\": \"AWS::S3::Bucket\",\n      \"Properties\": {\n        \"AccessControl\": \"PublicRead\",\n        \"WebsiteConfiguration\": {\n          \"IndexDocument\": \"index.html\",\n          \"ErrorDocument\": \"error.html\"\n        }\n      }\n    },\n    \"BucketPolicy\": {\n      \"Type\": \"AWS::S3::BucketPolicy\",\n      \"Properties\": {\n        \"Bucket\": { \"Ref\": \"S3Bucket\" },\n        \"PolicyDocument\": {\n          \"Statement\": [\n            {\n              \"Action\": [\"s3:GetObject\"],\n              \"Effect\": \"Allow\",\n              \"Resource\": { \"Fn::Join\": [\"\", [\"arn:aws:s3:::\", { \"Ref\": \"S3Bucket\" }, \"/*\"]] },\n              \"Principal\": \"*\"\n            }\n          ]\n        }\n      }\n    }\n  },\n  \"Outputs\": {\n    \"WebsiteURL\": {\n      \"Description\": \"URL for the website\",\n      \"Value\": { \"Fn::GetAtt\": [\"S3Bucket\", \"WebsiteURL\"] }\n    }\n  }\n}",
      "deploymentCount": 8,
      "uploadedAt": "2023-01-10T08:45:00Z",
      "updatedAt": "2023-05-15T15:30:00Z",
      "categories": ["storage", "static-site", "web"],
      "tenantId": "tenant-1"
    },
    {
      "id": "template-6",
      "name": "Cloud SQL Database",
      "description": "Managed PostgreSQL database on GCP",
      "type": "terraform",
      "provider": "gcp",
      "code": "provider \"google\" {\n  project = \"my-project-id\"\n  region  = \"us-central1\"\n}\n\nresource \"google_sql_database_instance\" \"main\" {\n  name             = \"postgres-instance\"\n  database_version = \"POSTGRES_13\"\n  region           = \"us-central1\"\n\n  settings {\n    tier = \"db-f1-micro\"\n    \n    backup_configuration {\n      enabled = true\n      start_time = \"02:00\"\n    }\n    \n    ip_configuration {\n      ipv4_enabled = true\n      authorized_networks {\n        name = \"all\"\n        value = \"0.0.0.0/0\"\n      }\n    }\n  }\n}\n\nresource \"google_sql_database\" \"database\" {\n  name     = \"my-database\"\n  instance = google_sql_database_instance.main.name\n}\n\nresource \"google_sql_user\" \"users\" {\n  name     = \"my-user\"\n  instance = google_sql_database_instance.main.name\n  password = \"changeme\"\n}",
      "deploymentCount": 3,
      "uploadedAt": "2023-03-25T13:10:00Z",
      "updatedAt": "2023-06-05T10:35:00Z",
      "categories": ["database", "postgresql"],
      "tenantId": "tenant-2"
    }
  ],
  "deployments": [
    {
      "id": "deployment-1",
      "name": "Production Web App",
      "templateId": "template-1",
      "templateName": "Basic Web Application",
      "provider": "azure",
      "status": "running",
      "environment": "production",
      "createdAt": "2023-05-10T08:30:00Z",
      "updatedAt": "2023-05-10T09:15:00Z",
      "parameters": {
        "location": "eastus",
        "appServicePlanTier": "Basic",
        "appServicePlanSize": "B1"
      },
      "resources": [
        "Resource Group: web-app-resources",
        "App Service Plan: webapp-asp",
        "App Service: webapp-basic-service"
      ],
      "tenantId": "tenant-1"
    },
    {
      "id": "deployment-2",
      "name": "Dev Microservices",
      "templateId": "template-2",
      "templateName": "Containerized Microservices",
      "provider": "aws",
      "status": "running",
      "environment": "development",
      "createdAt": "2023-05-15T11:20:00Z",
      "updatedAt": "2023-05-15T12:45:00Z",
      "parameters": {
        "region": "us-west-2",
        "clusterName": "microservices-dev"
      },
      "resources": [
        "EKS Cluster: microservices-dev",
        "IAM Role: eks-cluster-role",
        "VPC: vpc-12345"
      ],
      "tenantId": "tenant-1"
    },
    {
      "id": "deployment-3",
      "name": "Marketing Website",
      "templateId": "template-3",
      "templateName": "Google Cloud Storage with CDN",
      "provider": "gcp",
      "status": "running",
      "environment": "production",
      "createdAt": "2023-06-01T09:00:00Z",
      "updatedAt": "2023-06-01T09:45:00Z",
      "parameters": {
        "bucketName": "marketing-website",
        "region": "us-central1"
      },
      "resources": [
        "Storage Bucket: marketing-website",
        "Backend Bucket: cdn-backend-bucket",
        "IAM Binding: allUsers:objectViewer"
      ],
      "tenantId": "tenant-1"
    },
    {
      "id": "deployment-4",
      "name": "API Backend VMs",
      "templateId": "template-4",
      "templateName": "Virtual Machine Scale Set",
      "provider": "azure",
      "status": "failed",
      "environment": "staging",
      "createdAt": "2023-06-10T14:10:00Z",
      "updatedAt": "2023-06-10T14:55:00Z",
      "parameters": {
        "vmSku": "Standard_DS2_v2",
        "vmssName": "api-vmss",
        "capacity": "3"
      },
      "resources": [
        "VM Scale Set: api-vmss (Failed)"
      ],
      "tenantId": "tenant-1"
    },
    {
      "id": "deployment-5",
      "name": "Documentation Site",
      "templateId": "template-5",
      "templateName": "S3 Static Website",
      "provider": "aws",
      "status": "pending",
      "environment": "production",
      "createdAt": "2023-06-15T10:30:00Z",
      "updatedAt": "2023-06-15T10:40:00Z",
      "parameters": {
        "bucketName": "docs-website"
      },
      "resources": [
        "S3 Bucket: Pending...",
        "Bucket Policy: Pending..."
      ],
      "tenantId": "tenant-1"
    },
    {
      "id": "deployment-6",
      "name": "Analytics Database",
      "templateId": "template-6",
      "templateName": "Cloud SQL Database",
      "provider": "gcp",
      "status": "stopped",
      "environment": "development",
      "createdAt": "2023-05-25T13:45:00Z",
      "updatedAt": "2023-06-14T09:20:00Z",
      "parameters": {
        "instanceName": "analytics-db",
        "databaseName": "analytics",
        "tier": "db-f1-micro"
      },
      "resources": [
        "SQL Instance: analytics-db",
        "Database: analytics",
        "User: my-user"
      ],
      "tenantId": "tenant-2"
    }
  ],
  "integrationConfigs": [
    {
      "id": "integration-1",
      "name": "Azure Cloud",
      "type": "cloud",
      "provider": "azure",
      "status": "connected",
      "lastChecked": "2023-06-20T15:30:00Z",
      "tenantId": "tenant-1",
      "settings": {
        "clientId": "azure-client-id",
        "tenantId": "azure-tenant-id",
        "subscriptionId": "azure-subscription-id"
      }
    },
    {
      "id": "integration-2",
      "name": "AWS Cloud",
      "type": "cloud",
      "provider": "aws",
      "status": "connected",
      "lastChecked": "2023-06-20T15:35:00Z",
      "tenantId": "tenant-1",
      "settings": {
        "accessKey": "aws-access-key",
        "region": "us-west-2"
      }
    },
    {
      "id": "integration-3",
      "name": "Google Cloud",
      "type": "cloud",
      "provider": "gcp",
      "status": "warning",
      "lastChecked": "2023-06-20T15:40:00Z",
      "tenantId": "tenant-1",
      "settings": {
        "projectId": "gcp-project-id",
        "keyFilePath": "/path/to/key.json"
      }
    },
    {
      "id": "integration-4",
      "name": "Azure OpenAI",
      "type": "ai",
      "provider": "openai",
      "status": "connected",
      "lastChecked": "2023-06-20T15:45:00Z",
      "tenantId": "tenant-1",
      "settings": {
        "endpoint": "https://openai.azure.com",
        "apiKey": "openai-api-key",
        "deploymentName": "gpt4"
      }
    }
  ]
}

